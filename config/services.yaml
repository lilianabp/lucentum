# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
#    App\Controller\CustomExceptionController:
#        public: true
#        arguments:
#            $debug: '%kernel.debug%'
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Application,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.contact:
        class: App\Admin\ContactAdmin
        arguments: [~, App\Entity\Contact, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Contactos ,label: Contactos, on_top: true }
        public: true

    admin.post:
        class: App\Admin\PostAdmin
        arguments: [~, App\Application\Sonata\NewsBundle\Entity\Post, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Novedades, label: Noticias }
        public: true

    admin.tag:
        class: App\Admin\TagAdmin
        arguments: [~, App\Application\Sonata\ClassificationBundle\Entity\Tag, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Novedades, label: Etiquetas }
        public: true

    admin.collection:
        class: App\Admin\CollectionAdmin
        arguments: [~, App\Application\Sonata\ClassificationBundle\Entity\Collection, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Novedades, label: Categorías }
        public: true

    admin.comment:
        class: App\Admin\CommentAdmin
        arguments: [~, App\Application\Sonata\NewsBundle\Entity\Comment, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Novedades, label: Comentarios }
        public: true

    admin.marca:
        class: App\Admin\MarcaAdmin
        arguments: [~, App\Entity\Marca, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Configuraciones, label: Marca }
        public: true

    admin.estado:
        class: App\Admin\EstadoAdmin
        arguments: [~, App\Entity\Estado, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Configuraciones, label: Estado }
        public: true

    admin.condicion:
        class: App\Admin\CondicionAdmin
        arguments: [~, App\Entity\Condicion, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Configuraciones, label: Condicion }
        public: true

    admin.combustible:
        class: App\Admin\CombustibleAdmin
        arguments: [~, App\Entity\Combustible, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Configuraciones, label: Combustible }
        public: true

    admin.cambio:
        class: App\Admin\CambioAdmin
        arguments: [~, App\Entity\Cambio, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Configuraciones, label: Cambio }
        public: true

    admin.automovil:
        class: App\Admin\AutomovilAdmin
        arguments: [~, App\Entity\Automovil, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Automóviles, label: Automóviles, on_top: true }
        public: true
